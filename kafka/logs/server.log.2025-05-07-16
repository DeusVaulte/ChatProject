[2025-05-07 16:55:02,557] INFO [NodeToControllerChannelManager id=1 name=heartbeat] Node 1 disconnected. (org.apache.kafka.clients.NetworkClient)
[2025-05-07 16:55:02,746] INFO [SnapshotGenerator id=1] Creating new KRaft snapshot file snapshot 00000000000000009030-0000000002 because we have waited at least 60 minute(s). (org.apache.kafka.image.publisher.SnapshotGenerator)
[2025-05-07 16:55:02,844] INFO [SnapshotEmitter id=1] Successfully wrote snapshot 00000000000000009030-0000000002 (org.apache.kafka.image.publisher.SnapshotEmitter)
[2025-05-07 16:55:03,958] WARN Failed atomic move of C:\ChatProject\kafka\kraft-logs\log-start-offset-checkpoint.tmp to C:\ChatProject\kafka\kraft-logs\log-start-offset-checkpoint retrying with a non-atomic move (org.apache.kafka.common.utils.Utils)
java.nio.file.AccessDeniedException: C:\ChatProject\kafka\kraft-logs\log-start-offset-checkpoint.tmp -> C:\ChatProject\kafka\kraft-logs\log-start-offset-checkpoint
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:89)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:328)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:291)
	at java.base/java.nio.file.Files.move(Files.java:1430)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:955)
	at org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:941)
	at org.apache.kafka.server.common.CheckpointFile.write(CheckpointFile.java:86)
	at org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler.write(CheckpointFileWithFailureHandler.java:53)
	at kafka.server.checkpoints.OffsetCheckpointFile.write(OffsetCheckpointFile.scala:71)
	at kafka.log.LogManager.$anonfun$checkpointLogStartOffsetsInDir$1(LogManager.scala:874)
	at kafka.log.LogManager.$anonfun$checkpointLogStartOffsetsInDir$1$adapted(LogManager.scala:869)
	at scala.Option.foreach(Option.scala:437)
	at kafka.log.LogManager.checkpointLogStartOffsetsInDir(LogManager.scala:869)
	at kafka.log.LogManager.$anonfun$checkpointLogStartOffsets$1(LogManager.scala:824)
	at kafka.log.LogManager.$anonfun$checkpointLogStartOffsets$1$adapted(LogManager.scala:823)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at kafka.log.LogManager.checkpointLogStartOffsets(LogManager.scala:823)
	at kafka.log.LogManager.$anonfun$startupWithConfigOverrides$6(LogManager.scala:642)
	at org.apache.kafka.server.util.KafkaScheduler.lambda$schedule$1(KafkaScheduler.java:151)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
